#!/bin/sh
#
# INSTALL - installation instructions and installation script.
#
# You need GNU C (2.6.3 or later) and GNU Make (3.69 or later).
# Make sure that they are somewhere in your path.
#
# Step 0.  Extract the files from the gzipped tar archive.
#
# Step 1.  Run `configure'.  (Just type `sh configure'.)
#
#	   By default, the files will be installed in /usr/local/mercury-0.4.
#	   If you want the files to be installed someplace else,
#	   use the `--prefix <directory>' option to `configure'.
#
# Step 2.  Run `make'.
#	   This step will take a long time.
#
# Step 3.  Run `make install'.
#	   This step will also take a long time.
#
# Step 4.  Check the permissions on the installed files.
#	   Add /usr/local/mercury-0.4/bin to your PATH, and
#	   add /usr/local/mercury-0.4/info to your INFOPATH.
#	   You can also add a WWW link to the Mercury documentation in
#	   /usr/local/mercury-0.4/lib/mercury/html to your WWW home page,
#	   and you may want to print out a hard-copy of the documentation
#	   from the DVI files in /usr/local/mercury-0.4/lib/mercury/doc.
#
# Step 5.  Run `make clean'
#
# As a short-cut, steps 1-3 are listed below, so they can be replaced
# by just executing this file.  It's advisable to redirect the output
# into a file, just in case anything should go wrong.  I suggest you
# run it in the background, and read the Mercury documentation in the
# `doc' directory while you are waiting.  You can use the command 
#	sh -c './INSTALL > errs 2>&1' &
# to do this; the output will be redirected to the file `errs'.

sh configure &&
make &&
make install

# Fine-tuning:
# ------------
#
#	   If your system has multiple CPUs and lots of RAM,
#	   you can uncomment the definition of PARALLEL in the Makefile
#	   to perform a parallel make.
#
#	   If you are short on disk space, you can add the line "LIBGRADES="
#	   to the file Mmake.params before installing.  (This tells it
#	   to install only the default grade of the libraries.)
#
#	   If you are short on RAM, you can add -DSMALL_CONFIG to the CFLAGS
#          line in the file boehm_gc/Makefile.  (This tells the garbage
#	   collector to tune itself for small physical memory.)
#
#	   If your system supports shared libraries, but `configure' says
#	   Mercury does not support shared libraries on this system,
#	   contact us and we'll see if we can add support for shared libraries
#	   on that system.
#
#	   Efficiency will be much improved if Mercury can use gcc global
#	   register variables.  Currently these are supported for mips,
#	   sparc, alpha, and i386 (see runtime/regs.h and runtime/machdeps/*).
#	   If you want to use Mercury on some other CPU, contact us and
#	   we'll add support for gcc global registers for that CPU.
