#-----------------------------------------------------------------------------#

THIS_DIR = warnings

#-----------------------------------------------------------------------------#

COMPILE_PROGS=	\
	arg_order_rearrangment

ERRORCHECK_PROGS= \
	ambiguous_overloading \
	det_infer_warning \
	double_underscore \
	duplicate_call \
	inf_recursion_lambda \
	infinite_recursion \
	inference_test \
	missing_if \
	pragma_source_file \
	purity_warnings \
	simple_code \
	singleton_test \
	state_vars_test \
	unused_args_analysis \
	unused_args_test \
	unused_import

PROGS=$(COMPILE_PROGS) $(ERRORCHECK_PROGS) up_to_date

TESTS = $(PROGS)
SUBDIRS=
TESTS_DIR=..
include $(TESTS_DIR)/Mmake.common

# Module-specific options should go in Mercury.options so they
# can be found by `mmc --make'.
include Mercury.options

# With `mmc --make', the errors should only go to the 
# `.err' files, not stderr.
MCFLAGS += --output-compile-error-lines 0

$(COMPILE_PROGS:%=%.runtest): %.runtest: %.res_compile ;

$(ERRORCHECK_PROGS:%=%.runtest): %.runtest: %.res_error ;

# Build the `.analysis' file for unused_args_analysis2
# before building unused_args_analysis.c.
$(cs_subdir)unused_args_analysis.c: $(cs_subdir)unused_args_analysis2.c
unused_args_analysis.err: $(cs_subdir)unused_args_analysis2.c

# Check that `mmc --make up_to_date.m' generates a warning.
up_to_date.runtest:
	$(MCM) up_to_date.m > up_to_date.err_make 2>&1
	diff $(DIFF_OPTS) up_to_date.exp up_to_date.err_make \
		> up_to_date.res_make || \
		{ cat up_to_date.err_make; cat up_to_date.res_make; exit 1; }

#-----------------------------------------------------------------------------#

%.res_error:	%.exp %.err
	-rm -f $@
	diff $(DIFF_OPTS) $*.exp $*.err > $@ || \
                { [ -f $*.exp2 ] && \
                  diff $(DIFF_OPTS) $*.exp2 $*.err > $@; } || \
                { [ -f $*.exp3 ] && \
                  diff $(DIFF_OPTS) $*.exp3 $*.err > $@; } || \
                { [ -f $*.exp4 ] && \
                  diff $(DIFF_OPTS) $*.exp4 $*.err > $@; } || \
                { cat $*.err; cat $@; exit 1; }

%.res_compile:	%.exp %.c
	-rm -f $@
	diff $(DIFF_OPTS) $*.exp $*.err > $@ || \
                { [ -f $*.exp2 ] && \
                  diff $(DIFF_OPTS) $*.exp2 $*.err > $@; } || \
                { [ -f $*.exp3 ] && \
                  diff $(DIFF_OPTS) $*.exp3 $*.err > $@; } || \
                { [ -f $*.exp4 ] && \
                  diff $(DIFF_OPTS) $*.exp4 $*.err > $@; } || \
                { cat $*.err; cat $@; exit 1; }

ifeq ($(MMAKE_USE_MMC_MAKE),yes)
%.c: %.m
	$(MCM) $@
endif

#-----------------------------------------------------------------------------#

clean_local:	clean_err clean_res

clean_err:
	rm -f *.err up_to_date.err_make

#-----------------------------------------------------------------------------#
