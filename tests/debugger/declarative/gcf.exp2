       1:      1  1 CALL pred gcf:main/2-0 (cc_multi) gcf.m:8
mdb> echo on
Command echo enabled.
mdb> break a
Registering debuggable procedures... done.
There is one debuggable module, with 5 procedures.
 0: + stop  interface pred gcf:a/1-0 (nondet)
mdb> continue
       3:      2  2 CALL pred gcf:a/1-0 (nondet) gcf.m:26 (gcf.m:10)
mdb> finish
      23:      2  2 EXIT pred gcf:a/1-0 (nondet) gcf.m:26 (gcf.m:10)
mdb> dd
atom("a", [univ(11 : int)])
Valid? no
atom("g", [univ(2 : int)])
Valid? yes
atom("c", [univ(2 : int), univ(11 : int)])
Valid? yes
atom("f", [univ(11 : int)])
Valid? yes
Incorrect node found:
wrong_answer(atom("a", [univ(11 : int)]))
      23:      2  2 EXIT pred gcf:a/1-0 (nondet) gcf.m:26 (gcf.m:10)
mdb> continue
      24:      2  2 REDO pred gcf:a/1-0 (nondet) gcf.m:26 (gcf.m:10)
mdb> finish
      30:      2  2 EXIT pred gcf:a/1-0 (nondet) gcf.m:26 (gcf.m:10)
mdb> dd
atom("a", [univ(12 : int)])
Valid? no
atom("c", [univ(2 : int), univ(12 : int)])
Valid? yes
atom("f", [univ(12 : int)])
Valid? yes
Incorrect node found:
wrong_answer(atom("a", [univ(12 : int)]))
      30:      2  2 EXIT pred gcf:a/1-0 (nondet) gcf.m:26 (gcf.m:10)
mdb> continue
      31:      2  2 REDO pred gcf:a/1-0 (nondet) gcf.m:26 (gcf.m:10)
mdb> finish
      42:      2  2 EXIT pred gcf:a/1-0 (nondet) gcf.m:26 (gcf.m:10)
mdb> dd
atom("a", [univ(20 : int)])
Valid? no
atom("g", [univ(3 : int)])
Valid? yes
atom("c", [univ(3 : int), univ(20 : int)])
Valid? yes
atom("f", [univ(20 : int)])
Valid? yes
Incorrect node found:
wrong_answer(atom("a", [univ(20 : int)]))
      42:      2  2 EXIT pred gcf:a/1-0 (nondet) gcf.m:26 (gcf.m:10)
mdb> continue
yes(20)
