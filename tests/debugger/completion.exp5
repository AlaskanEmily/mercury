       1:      1  1 CALL pred completion:main/2-0 (det) completion.m:13
mdb> echo on
echo on
Command echo enabled.
mdb> register --quiet
register --quiet
mdb> 
?                  e                  mmc_options        save
P                  echo               modules            scope
alias              enable             next               scroll
all_regs           exception          nondet_stack       set
b                  excp               p                  source
break              f                  print              stack
browse             finish             print_optionals    stack_regs
c                  forward            printlevel         step
cc_query           g                  proc_body          table_io
context            goto               proc_stats         unalias
continue           h                  procedures         unhide_events
current            help               query              up
d                  ignore             quit               v
delete             io_query           r                  vars
disable            label_stats        register           view
document           level              retry              
document_category  maxdepth           return             
down               mindepth           s                  
mdb> h
h     help  
mdb> help v
vars  view  
mdb> help vars 
help vars 
vars
     Prints the names of all the known variables in the current
     environment, together with an ordinal number for each variable.
mdb> p --flat 
*          --pretty   -f         -v         exception  
--flat     --verbose  -p         DCG_0      goal       
mdb> p --flat DCG_0 
p --flat DCG_0 
       DCG_0 (arg 1)          	state('<<c_pointer>>')
mdb> sta
stack       stack_regs  
mdb> stack --detailed 
stack --detailed 
   0       1       1    1 pred completion:main/2-0 (det) (completion.m:13) (empty)
mdb> proc
proc_body   proc_stats  procedures  
mdb> procedures complet
completion            completion:sub2       
completion:sub1       completion:sub2:sub3  
mdb> procedures completion:
completion:sub1       completion:sub2       completion:sub2:sub3
mdb> procedures completion:sub1
procedures completion:sub1
List of procedures in module `completion:sub1'
pred completion:sub1:zp/1-0 (det)
func completion:sub1:z1/0-0 (det)
mdb> set --flat format pretty 
set --flat format pretty 
mdb> unalias excp 
unalias excp 
Alias `excp' removed.
mdb> b zabc3 
b zabc3 
 0: + stop  interface func completion:sub2:sub3:zabc3/0-0 (det)
mdb> b func*complet
func*completion:            func*completion:sub2:
func*completion:sub1:       func*completion:sub2:sub3:
mdb> b func*completion:z
func*completion:z   func*completion:zz  
mdb> b func*completion:z
b func*completion:z
 1: + stop  interface func completion:z/0-0 (det)
mdb> b complet
completion:            completion:sub2:       
completion:sub1:       completion:sub2:sub3:  
mdb> b completion:s
completion:sub1:       completion:sub2:       completion:sub2:sub3:
mdb> b completion:sub1
completion:sub1:z1  completion:sub1:zp  
mdb> b completion:sub1:z1
b completion:sub1:z1
 2: + stop  interface func completion:sub1:z1/0-0 (det)
mdb> b complet
completion:            completion:sub2:       
completion:sub1:       completion:sub2:sub3:  
mdb> b completion:s
completion:sub1:       completion:sub2:       completion:sub2:sub3:
mdb> b completion:sub2
completion:sub2:       completion:sub2:sub3:  
mdb> b completion:sub2:sub3:zabc3 
b completion:sub2:sub3:zabc3 
 3: + stop  interface func completion:sub2:sub3:zabc3/0-0 (det)
mdb> 2d
2d                  2disable            2document_category
2delete             2document           2down
mdb> 2delete 
2delete 
 2: E stop  interface func completion:sub1:z1/0-0 (det)
mdb> c
c
ok
