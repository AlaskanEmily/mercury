#-----------------------------------------------------------------------------#
# Copyright (C) 1995 University of Melbourne.
# See the file COPYING for copying permission.
#-----------------------------------------------------------------------------#

# Mmake - the top-level Mmake file for the Mercury implementation

MAIN_TARGET=all

MERCURY_DIR=.
include Mmake.common

#-----------------------------------------------------------------------------#

SUBDIRS = scripts runtime boehm_gc library compiler doc

SUBDIR_MMAKE =	PATH=../scripts:$$PATH \
		MMAKE_VARS=../scripts/Mmake.vars \
		MMAKE_RULES=../scripts/Mmake.rules \
		../scripts/mmake $(MMAKEFLAGS)

#-----------------------------------------------------------------------------#

.PHONY: depend
depend: depend_library depend_compiler

.PHONY: depend_library
depend_library:
	cd library && $(SUBDIR_MMAKE) depend

.PHONY: depend_compiler
depend_compiler:
	cd compiler && $(SUBDIR_MMAKE) depend

#-----------------------------------------------------------------------------#

.PHONY: all
all: $(SUBDIRS)

.PHONY: scripts
scripts:
	cd scripts && $(SUBDIR_MMAKE)

.PHONY: runtime
runtime: scripts
	cd runtime && $(SUBDIR_MMAKE)

.PHONY: boehm_gc
boehm_gc: scripts
	cd boehm_gc && $(SUBDIR_MMAKE)

.PHONY: library
library: scripts
	cd library && $(SUBDIR_MMAKE)

.PHONY: compiler
compiler: scripts runtime boehm_gc library 
	cd compiler && $(SUBDIR_MMAKE)

.PHONY: doc
doc: scripts
	cd doc && $(SUBDIR_MMAKE)

#-----------------------------------------------------------------------------#

# Generally you should do a `mmake realclean' before doing `mmake tar'.

.PHONY: tar
tar:
	cd scripts && mmake
	cd library && $(SUBDIR_MMAKE) ints cs
	cd compiler && $(SUBDIR_MMAKE) ints cs
	cd scripts && mmake -s realclean
	cd .. && (tar -cf - mercury | gzip > mercury.tar.gz)

#-----------------------------------------------------------------------------#

.PHONY: bootstrap_check
bootstrap_check: stage_1 stage_2 stage_3
	diff stage2 stage3

.PHONY: stage_1
stage_1: all
	[ -d stage1 ] || mkdir stage1
	cp compiler/mercury_compile stage1
	cd compiler && rm -f *.mod *.c *.o *.pic_o mercury_compile
	cd library && rm -f *.mod *.c *.o *.pic_o *.a *.so

.PHONY: stage_2
stage_2:
	cd library && \
	MERCURY_COMPILER="`pwd`/stage1/mercury_compile" \
	$(SUBDIR_MMAKE)
	cd compiler && \
	MERCURY_COMPILER="`pwd`/stage1/mercury_compile" \
	$(SUBDIR_MMAKE)
	[ -d stage_2 ] || mkdir stage2
	cp compiler/mercury_compile compiler/*.c library/*.c stage2
	cd compiler && rm -f *.mod *.c *.o *.pic_o mercury_compile
	cd library && rm -f *.mod *.c *.o *.pic_o *.a *.so

.PHONY: stage_3
stage_3:
	cd library && \
	MERCURY_COMPILER="`pwd`/stage1/mercury_compile" \
	$(SUBDIR_MMAKE)
	cd compiler && \
	MERCURY_COMPILER="`pwd`/stage1/mercury_compile" \
	$(SUBDIR_MMAKE)
	[ -d stage_3 ] || mkdir stage3
	cp compiler/mercury_compile compiler/*.c library/*.c stage3
	cd compiler && rm -f *.mod *.c *.o *.pic_o mercury_compile
	cd library && rm -f *.mod *.c *.o *.pic_o *.a *.so

.PHONY: stage_4
stage_4:
	cd library && \
	MERCURY_COMPILER="`pwd`/stage1/mercury_compile" \
	$(SUBDIR_MMAKE)
	cd compiler && \
	MERCURY_COMPILER="`pwd`/stage1/mercury_compile" \
	$(SUBDIR_MMAKE)
	[ -d stage_4 ] || mkdir stage4
	cp compiler/mercury_compile compiler/*.c library/*.c stage4
	cd compiler && rm -f *.mod *.c *.o *.pic_o mercury_compile
	cd library && rm -f *.mod *.c *.o *.pic_o *.a *.so


#-----------------------------------------------------------------------------#

.PHONY: install
install: all install_scripts install_runtime install_boehm_gc \
		install_library install_compiler install_doc \
		install_runtime_grades install_library_grades

.PHONY: install_scripts
install_scripts: scripts
	cd scripts && $(SUBDIR_MMAKE) install

.PHONY: install_runtime
install_runtime: runtime
	cd runtime && $(SUBDIR_MMAKE) install

.PHONY: install_boehm_gc
install_boehm_gc: boehm_gc
	cd boehm_gc && $(SUBDIR_MMAKE) install

.PHONY: install_library
install_library: library
	cd library && $(SUBDIR_MMAKE) install

.PHONY: install_compiler
install_compiler: compiler
	cd compiler && $(SUBDIR_MMAKE) install

.PHONY: install_doc
install_doc: doc
	cd doc && $(SUBDIR_MMAKE) install

.PHONY: install_runtime_grades
install_runtime_grades:
	cd runtime && \
	rm -rf tmp_dir && \
	mkdir tmp_dir && \
	(mv -f *.o *.pic_o *.a *.so tmp_dir || true) && \
	for grade in $(LIBGRADES); do \
		$(SUBDIR_MMAKE) GRADE=$$grade install_lib || exit 1; \
		rm -f *.o *.pic_o *.a *.so; \
	done && \
	(mv tmp_dir/* . || true)

.PHONY: install_library_grades
install_library_grades:
	cd library && \
	rm -rf tmp_dir && \
	mkdir tmp_dir && \
	(mv -f *.mod *.c *.o *.pic_o *.a *.so tmp_dir || true) && \
	for grade in $(LIBGRADES); do \
		$(SUBDIR_MMAKE) GRADE=$$grade install_library || exit 1; \
		rm -f *.mod *.c *.o *.pic_o *.a *.so; \
	done && \
	(mv tmp_dir/* . || true)

#-----------------------------------------------------------------------------#

clean: clean_subdirs

.PHONY: clean_subdirs
clean_subdirs:
	rm -rf runtime/tmp_dir library/tmp_dir
	for dir in $(SUBDIRS); do \
		if [ "$$dir" = scripts ]; then continue; fi; \
		(cd $$dir; $(SUBDIR_MMAKE) clean) \
	done

realclean: realclean_subdirs

.PHONY: realclean_subdirs
realclean_subdirs:
	rm -rf stage[1-4]
	for dir in $(SUBDIRS); do \
		if [ "$$dir" = scripts ]; then continue; fi; \
		(cd $$dir; $(SUBDIR_MMAKE) realclean) \
	done
	cd scripts; $(SUBDIR_MMAKE) realclean

#-----------------------------------------------------------------------------#
