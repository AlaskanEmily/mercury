#!/bin/sh

usage="\
Usage: $0 [options]
Options:
	-c, --compile-only
		Compile only. Do not compare stage2.ok and stage3.
	-h, --help
		Display this usage message.
	-j <num-jobs>, --jobs <num-jobs>
		Run using <num-jobs> different parallel processes.
	-m <mmake-args>, --mmake-args <mmake-args>
		Pass <mmake-args> as options to \`mmake'.
	-o <filename>, --output-file <filename>
		Output results to <filename>.
"

compile_only="false"
jfactor=""
mmake_opts=""
outfile=""

while [ $# -gt 0 ]; do
	case "$1" in

	-c|--compile-only)
		compile_only="true"; shift ;;

	-h|--help)
		echo "$usage"
		exit 0 ;;

	-j|--jobs)
		jfactor="-j$2"; shift ;;
	-j*)
		jfactor="-j` expr $1 : '-j\(.*\)' `" ;;
	--jobs*)
		jfactor="--jobs` expr $1 : '--jobs\(.*\)' `" ;;

	-m|--mmake)
		mmake_opts="$mmake_opts $2"; shift ;;

	-o|--output-file)
		outfile="$2"; shift ;;
	-o*)
		outfile="` expr $1 : '-o\(.*\)' `"; ;;

	--)	
		shift; break ;;
	-*)
		echo "$0: unknown option \`$1'" 1>&2
		echo "$usage" 1>&2
		exit 1 ;;
	*)
		break ;;
	esac
	shift
done

root=`/bin/pwd`

MERCURY_COMPILER=$root/stage1/mercury_compile
export MERCURY_COMPILER
MERCURY_INT_DIR=$root/stage2/library
export MERCURY_INT_DIR

MMAKE_VPATH=.
export MMAKE_VPATH
MMAKE_DIR=../scripts
export MMAKE_DIR

# Ensure that mmake will not disturb the .o and .c files placed there by binary

touch stage2/library/*.c
touch stage2/compiler/*.c

sleep 2

touch stage2/library/*.o
touch stage2/compiler/*.o

# Rebuild the stage2 library and compiler from the components already there.

/bin/rm -f stage2/library/libmercury.a stage2/library/libmercury.so
/bin/rm -f stage2/compiler/mercury_compile

# the `RM_C=:' ensures that the `.c' files do not get deleted

if (cd stage2/library ; mmake $mmake_opts $jfactor RM_C=: libmercury)
then
	echo "building of stage 2 library successful"
else
	echo "building of stage 2 library not successful"
	exit 1
fi

if (cd stage2/compiler ; mmake $mmake_opts $jfactor RM_C=: mercury_compile)
then
	echo "building of stage 2 compiler successful"
else
	echo "building of stage 2 compiler not successful"
	exit 1
fi

unset MMAKE_VPATH
unset MMAKE_DIR

MERCURY_COMPILER=$root/stage2/compiler/mercury_compile
export MERCURY_COMPILER
MERCURY_INT_DIR=$root/stage3/library
export MERCURY_INT_DIR

# Rebuild the stage3 library and compiler from scratch

/bin/rm -f stage3/library/*.c
/bin/rm -f stage3/compiler/*.c

if (cd stage3 ; mmake $mmake_opts depend_library depend_compiler)
then
	echo "building of stage 3 dependencies successful"
else
	echo "building of stage 3 dependencies not successful"
	exit 1
fi

MMAKE_VPATH=.
export MMAKE_VPATH
MMAKE_DIR=../scripts
export MMAKE_DIR

if (cd stage3/library ; mmake -S $mmake_opts $jfactor cs)
then
	echo "building of stage 3 library successful"
else
	echo "building of stage 3 library not successful"
	exit 1
fi

if (cd stage3/compiler ; mmake -S $mmake_opts $jfactor cs)
then
	echo "building of stage 3 compiler successful"
else
	echo "building of stage 3 compiler not successful"
	exit 1
fi

if test "$compile_only" = "true"
then
	exit 0
fi

exit_status=0

exec 3>&1		# save stdout in fd 3
if [ -n "$outfile" ]
then
	exec > "$outfile"	# redirect stdout to $outfile
fi

for dir in library compiler; do
	for file in stage2.ok/$dir/*.c; do
		diff -u $file stage3/$dir/`basename $file` ||
			exit_status=1
	done
done

exec >&3		# restore stdout from fd 3
if [ $exit_status -ne 0 ]; then
	echo "error - stage 2 and stage 3 differ!"
else
	echo "stage 2 and stage 3 compare ok"
fi

exit $exit_status
