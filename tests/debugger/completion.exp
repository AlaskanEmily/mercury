       1:      1  1 CALL pred completion.main/2-0 (det) completion.m:13
mdb> echo on
Command echo enabled.
mdb> register --quiet
mdb> 
?                    excp                 r
P                    f                    register
alias                finish               retry
all_class_decls      flag                 return
all_procedures       forward              s
all_regs             g                    save
all_type_ctors       gen_stack            save_to_file
b                    goal_paths           scope
break                goto                 scroll
break_print          h                    set
browse               help                 source
c                    histogram_all        stack
cc_query             histogram_exp        stack_default_limit
class_decl           ignore               stack_regs
clear_histogram      io_query             step
consumer             label_stats          subgoal
context              level                table
continue             maxdepth             table_io
current              mindepth             term_size
cut_stack            mm_stacks            trust
d                    mmc_options          trusted
dd                   modules              type_ctor
dd_dd                next                 unalias
debug_vars           nondet_stack         unhide_events
delete               p                    untrust
disable              pneg_stack           up
document             print                v
document_category    print_optionals      var_details
down                 printlevel           var_name_stats
e                    proc_stats           vars
echo                 procedures           view
enable               query                
exception            quit                 
h              help           histogram_all  histogram_exp  
var_details     var_name_stats  vars            view
var_details     var_name_stats  vars            
 help vars 
vars
     Prints the names of all the known variables in the current
     environment, together with an ordinal number for each variable.
mdb> 
*          --pretty   -f         -v         goal       
--flat     --verbose  -p         exception  
p --flat D
mdb: there is no such variable.
mdb> 
stack                stack_default_limit  stack_regs
stack --detailed 
   0       1       1    1 pred completion.main/2-0 (det) (completion.m:13) (empty)
mdb> 
proc_stats  procedures  
completion            completion.sub2       
completion.sub1       completion.sub2.sub3  
completion.sub1       completion.sub2       completion.sub2.sub3
procedures completion.sub1
List of procedures in module `completion.sub1'
pred completion.sub1.zp/1-0 (det)
func completion.sub1.z1/0-0 (det)
mdb> set --flat format pretty 
mdb> unalias excp 
Alias `excp' removed.
mdb> b zabc3 
 0: + stop  interface func completion.sub2.sub3.zabc3/0-0 (det)
mdb> 
func*completion.            func*completion.sub2.
func*completion.sub1.       func*completion.sub2.sub3.
func*completion.z   func*completion.zz  
b func*completion.z
 1: + stop  interface func completion.z/0-0 (det)
mdb> 
completion.            completion.sub2.       
completion.sub1.       completion.sub2.sub3.  
completion.sub1.       completion.sub2.       completion.sub2.sub3.
completion.sub1.z1  completion.sub1.zp  
b completion.sub1.z1
 2: + stop  interface func completion.sub1.z1/0-0 (det)
mdb> 
completion.            completion.sub2.       
completion.sub1.       completion.sub2.sub3.  
completion.sub1.       completion.sub2.       completion.sub2.sub3.
completion.sub2.       completion.sub2.sub3.  
b completion.sub2.sub3.zabc3 
 3: + stop  interface func completion.sub2.sub3.zabc3/0-0 (det)
mdb> 
2d                  2debug_vars         2document
2dd                 2delete             2document_category
2dd_dd              2disable            2down
2debug_vars  2delete      
2delete 
 2: E stop  interface func completion.sub1.z1/0-0 (det)
mdb> c
ok
