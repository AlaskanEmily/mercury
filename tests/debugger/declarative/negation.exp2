       1:      1  1 CALL pred negation:main/2-0 (det) negation.m:13
mdb> echo on
Command echo enabled.
mdb> break p
Registering debuggable procedures... done.
There is one debuggable module, with 4 procedures.
 0: + stop  interface pred negation:p/2-0 (det)
mdb> continue
       2:      2  2 CALL pred negation:p/2-0 (det) negation.m:29 (negation.m:14)
mdb> finish
      23:      2  2 EXIT pred negation:p/2-0 (det) negation.m:29 (negation.m:14)
mdb> dd
atom("p", [univ(1 : int), univ(42 : int)])
Valid? no
atom("r", [univ(1 : int), univ(11 : int)])
Valid? yes
atom("q", [univ(11 : int)])
Valid? yes
atom("r", [univ(1 : int), univ(21 : int)])
Valid? yes
atom("q", [univ(21 : int)])
Valid? yes
Call atom("r", [univ(1 : int)])
Solutions:
	atom("r", [univ(1 : int), univ(11 : int)])
	atom("r", [univ(1 : int), univ(21 : int)])
Complete? yes
Incorrect node found:
wrong_answer(atom("p", [univ(1 : int), univ(42 : int)]))
      23:      2  2 EXIT pred negation:p/2-0 (det) negation.m:29 (negation.m:14)
mdb> continue
42
