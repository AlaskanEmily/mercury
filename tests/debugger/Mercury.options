
# The completion test requires mdb to use readline, even though
# the input is not a terminal.
MLFLAGS-completion = --runtime-flags --force-readline

# The debugger can't know about type class declarations unless we generate
# the new type of RTTI for them.
MCFLAGS-class_decl = --new-type-class-rtti

# The label_layout test is for a bug that showed up only with --opt-space.
MCFLAGS-label_layout = --opt-space

MCFLAGS-no_inline_builtins = --no-inline-builtins
MCFLAGS-queens_rep = --trace rep
MCFLAGS-shallow = --trace shallow
MCFLAGS-tabled_read = --trace-table-io-all
MCFLAGS-tabled_read_unitize = --trace-table-io-all
MCFLAGS-tabled_read_decl = --trace-table-io-all
# By default, we reclaim heap on failure in non-Boehm-gc grades.
# The extra stack slots required for this reclamation cause spurious
# differences from the expected output on the nondet_stack test case.
# The optimization level also affects stack frame sizes.
MCFLAGS-nondet_stack = -O2 --no-reclaim-heap-on-failure
# We test the behavior of comparisons both with and without index predicates.
# The --compare-specialization flag creates index predicates for type
# constructors with three or more alternatives. The optimization level
# is fixed to fix the event numbers in the input script; this is needed
# because one cannot (yet) put breakpoints on unify, compare and index preds.
MCFLAGS-uci = -O2 --compare-specialization 2

# We need to use shared libraries for interactive queries to work.
# The following is necessary for shared libraries to work on Linux.
GRADEFLAGS-interactive = --pic-reg
MLFLAGS-interactive = --shared
