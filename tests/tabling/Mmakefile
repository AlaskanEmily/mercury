#-----------------------------------------------------------------------------#

main_target: check

include ../Mmake.common

#-----------------------------------------------------------------------------#

SIMPLE_PROGS = \
	boyer \
	expand \
	expand_float \
	expand_poly \
	fib \
	fib_float \
	fib_list \
	fib_string \
	loopcheck

NONDET_PROGS = \
	coup \
	coup_det_frame \
	coup_no_commit \
	coup_non_tabled_frame \
	generator_in_commit \
	repeat \
	seq \
	tc_loop \
	tc_minimal

# We don't yet pass the following minimal model tests. The reason is that
# they contain interactions between tabling and constructs that function
# as negated contexts.
#
#	consumer_in_commit
#	consumer_in_solutions

ifneq "$(findstring .gc,$(GRADE))" ""
	ifneq "$(findstring .mm,$(GRADE))" ""
		PROGS=$(SIMPLE_PROGS) $(NONDET_PROGS)
	else
		PROGS=$(SIMPLE_PROGS)
	endif
else
	PROGS=
endif

#-----------------------------------------------------------------------------#

# With the Mercury system as of 17 September 1998,
# tc_minimal works on some machines even in the presence of a known bug
# if inlining is turned on, so we turn inlining off to make the test tougher.
MCFLAGS-tc_minimal	=	--no-inlining

# Some test cases are expected to abort, so we need to ignore the exit status
# (hence the leading `-')
tc_loop.out: tc_loop
	-./tc_loop > tc_loop.out 2>&1;
loopcheck.out: loopcheck
	-./loopcheck > loopcheck.out 2>&1;

#-----------------------------------------------------------------------------#

DEPS=	$(PROGS:%=%.dep)
DEPENDS=$(PROGS:%=%.depend)
OUTS=	$(PROGS:%=%.out)
RESS=	$(PROGS:%=%.res)

#-----------------------------------------------------------------------------#

MMAKEFLAGS =

dep:	$(DEPS)

depend:	$(DEPENDS)

check:	$(OUTS) $(RESS)

all:	$(PROGS)

clean_local:

realclean_local:

#-----------------------------------------------------------------------------#
