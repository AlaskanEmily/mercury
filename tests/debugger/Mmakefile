#-----------------------------------------------------------------------------#

main_target:	check

include ../Mmake.common

RM_C=:

#-----------------------------------------------------------------------------#

DEBUGGER_PROGS=	\
	debugger_regs			\
	existential_type_classes	\
	implied_instance		\
	interpreter			\
	multi_parameter			\
	queens

MCFLAGS = --trace deep
C2INITFLAGS = -t

# Base grades `jump' and `fast' cannot be used with
# stack layouts (which are required for tracing).

ifneq "$(findstring asm_,$(GRADE))" ""
    PROGS=$(DEBUGGER_PROGS)
else
    ifneq "$(findstring jump,$(GRADE))" ""
	PROGS=
    else
	ifneq "$(findstring fast,$(GRADE))" ""
	    PROGS=
	else
	    PROGS=$(DEBUGGER_PROGS)
	endif
    endif
endif

LIBPROGS=	$(PROGS:%=%_lib)
ALLPROGS=	$(PROGS)

#-----------------------------------------------------------------------------#

debugger_regs.out: debugger_regs debugger_regs.inp
	mdb ./debugger_regs < debugger_regs.inp > debugger_regs.out

existential_type_classes.out: existential_type_classes queens.inp
	mdb ./existential_type_classes < existential_type_classes.inp > existential_type_classes.out

implied_instance.out: implied_instance implied_instance.inp
	mdb ./implied_instance < implied_instance.inp > implied_instance.out

interpreter.out: interpreter interpreter.inp
	mdb ./interpreter interpreter.m < interpreter.inp > interpreter.out

multi_parameter.out: multi_parameter multi_parameter.inp
	mdb ./multi_parameter < multi_parameter.inp > multi_parameter.out

queens.out: queens queens.inp
	mdb ./queens < queens.inp > queens.out

# We ignore the result of this action because
# the exit status of grep is not useful in this case
mdb_command_test.out: queens mdb_command_test.inp
	-mdb ./queens < mdb_command_test.inp \
		| egrep "internal error in the trace help system" \
		> mdb_command_test.out

#-----------------------------------------------------------------------------#

DEPS=		$(ALLPROGS:%=$(deps_subdir)%.dep)
DEPENDS=	$(ALLPROGS:%=%.depend)
OUTS=		$(PROGS:%=%.out)
LIBOUTS=	$(LIBPROGS:%=%.out)
RESS=		$(PROGS:%=%.res) mdb_command_test.res
LIBRESS=	$(LIBPROGS:%=%.res) mdb_command_test.res

#-----------------------------------------------------------------------------#

dep:		$(DEPS)

depend:		$(DEPENDS)

check:		$(OUTS) $(RESS)

check_lib:	$(LIBOUTS) $(LIBRESS)

all:		$(ALLPROGS)

#-----------------------------------------------------------------------------#
