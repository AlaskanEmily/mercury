/*
** Copyright (C) 1995-1997 University of Melbourne.
** This file may only be copied under the terms of the GNU Library General
** Public License - see the file COPYING.LIB in the Mercury distribution.
*/

/*
** @configure_input@
*/

/*
** conf.h.in -
**	Various configuration parameters, determined automatically by
**	the auto-configuration script.
*/

#ifndef CONF_H
#define CONF_H

/*
** The parameters defined here have the following meanings:
**
**	WORD_TYPE		the base type for the definition of Word.
**	LOW_TAG_BITS		the number of low-order tag bits we can use.
**	BOXED_FLOAT		true if double precision floats might not fit
**				in a Word, and hence must be boxed.
**				(Note that when bootstrapping from the source
**				distribution, we initially build things without
**				BOXED_FLOAT even on machines for which
**				sizeof(Float) <= sizeof(Integer).)
**	HAVE_SYSCONF		the machine has the sysconf() syscall.
**	HAVE_GETPAGESIZE	the machine has the getpagesize() syscall.
**	HAVE_MEMALIGN		the machine has the memalign() function.
**	HAVE_MPROTECT		the machine has the mprotect() syscall.
**	HAVE_STRERROR		the machine has the strerror() function.
**	RETSIGTYPE		the return type of signal handlers.
**	HAVE_SIGINFO		true if we can _somehow_ figure out the
**				fault address for SIGSEGVs.
**	HAVE_SIGINFO_T		true if we can figure out the
**				fault address for SIGSEGVs using sigaction
**				and siginfo_t.
**	HAVE_SIGCONTEXT_STRUCT	true if normal signal handlers are given
**				sigcontext_struct arguments that we can use to
**				figure out the fault address for SIGSEGVs.
**	HAVE_SYS_SIGINFO	we have <sys/siginfo.h>
**	HAVE_UCONTEXT		we have <ucontext.h>
**	HAVE_SYS_UCONTEXT	we have <sys/ucontext.h>
**	HAVE_ASM_SIGCONTEXT	we have <asm/sigcontext.h> (e.g. i386 Linux)
**	HAVE_SYS_TIME		we have <sys/time.h>
**	HAVE_SYS_PARAM		we have <sys/param.h>
**	HAVE_SETITIMER		we have setitimer()
**	PC_ACCESS		the way to access the saved PC in ucontexts.
**	PC_ACCESS_GREG		PC_ACCESS is in a gregs (general regs) array
**	HAVE_SIGACTION		the machine has the sigaction() syscall.
**	SIGACTION_FIELD		the name of the field in the sigaction struct
**				(either sa_handler or sa_sigaction).
**	PARALLEL		we are configuring for parallel execution
**	FLOAT_IS_64_BITS	The C type `float' is 64-bit on this host.
**	DOUBLE_IS_64_BITS	The C type `double' is 64-bit on this host.
**	LONG_DOUBLE_IS_64_BITS	The C type `long double' is 64-bit on this host.
**	BIG_ENDIAN		This host is big-endian.
**	LITTLE_ENDIAN		This host is little-endian.
*/

#undef	WORD_TYPE
#undef	LOW_TAG_BITS
#undef	BOXED_FLOAT
#undef	HAVE_SYSCONF
#undef	HAVE_GETPAGESIZE
#undef	HAVE_MEMALIGN
#undef	HAVE_MPROTECT
#undef	HAVE_STRERROR
#undef	RETSIGTYPE
#undef	HAVE_SIGINFO
#undef	HAVE_SIGINFO_T
#undef	HAVE_SIGCONTEXT_STRUCT
#undef	HAVE_SYS_SIGINFO
#undef	HAVE_UCONTEXT
#undef	HAVE_SYS_UCONTEXT
#undef	HAVE_ASM_SIGCONTEXT
#undef	HAVE_SYS_TIME
#undef	HAVE_SYS_PARAM
#undef	HAVE_SETITIMER
#undef	PC_ACCESS
#undef	PC_ACCESS_GREG
#undef	HAVE_SIGACTION
#undef	SIGACTION_FIELD
#undef	PARALLEL
#undef	FLOAT_IS_64_BIT
#undef	DOUBLE_IS_64_BIT
#undef	LONG_DOUBLE_IS_64_BIT
#undef	BIG_ENDIAN
#undef	LITTLE_ENDIAN

#endif /* CONF_H */
