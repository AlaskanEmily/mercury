codegen.nl
----------

semideterministic and nondeterministic code generation

integer, float and string constant handling.
types with > 4 tags need handling in llds.
types with constants only (enumerations) should be handled as ints.

other
-----

finish type checking

mode anaylsis

optimization of various sorts

module system & seperate compilation

better error handling

implement user-defined operators:
	Add a new construct `:- op(Pred, Type, Op).' as in Prolog;
	change prog_io.nl to parse this construct and call io__op
	accordingly.

fix all the XXX's.

map.nl: reimplement using bintree.nl or array.nl.

write a pass over hlds to recognize the builtin predicates,
including arithmetic predicates such as "+" and arithmetic tests
such as "<", and ensure that codegen outputs the correct code
for these builtins.

generate code for complicated_unify's (there are some comments about
this in the paper.)

array.nl: write a predicate to resize arrays.

